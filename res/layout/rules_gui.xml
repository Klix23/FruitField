<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="10dp"
        android:paddingLeft="69dp"
        android:paddingTop="6dp"
        tools:ignore="RtlSymmetry,RtlHardcoded" >

        <ImageView
            android:id="@+id/imgLogo"
            android:layout_width="165dp"
            android:layout_height="62dp"
            android:src="@drawable/logo"
            tools:ignore="ContentDescription" />

    </FrameLayout>

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="388dp" >

        <ImageView
            android:id="@+id/imgHintergrund"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:src="@drawable/background"
            tools:ignore="ContentDescription" />

        <EditText
            android:id="@+id/tfRegeln"
            android:layout_width="304dp"
            android:layout_height="wrap_content"
            android:ems="10"
            android:inputType="textMultiLine"
            android:paddingLeft="24dp"
            android:paddingTop="16dp"
            android:text="
            
FruitField ist ein Logik-Spiel, das auf einer 4x5-Matrix aufbaut. 
Die Elemente der Matrix können unterschiedliche Stufen in einer vorbestimmten Reihenfolge (Erde - Pflanze - Frucht) annehmen.
Zu Beginn des Spiels haben alle Elemente unterschiedliche Stufen.

Ziel ist es, durch geschicktes Anklicken der Elemente, die Stufen so zu durchlaufen, dass zum Schluss alle Früchte abgeerntet sind und nur noch Erde zu sehen ist.

Dabei ist zu berücksichtigen, dass beim Anklicken eines Elementes die horizontalen und vertikalen Nachbarelemente ebenfalls ihren Status ändern."
            android:textSize="14sp"
            tools:ignore="RtlSymmetry,HardcodedText,RtlHardcoded" >

            <requestFocus />
        </EditText>

        <EditText
            android:id="@+id/tfÜberschrift"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:ems="10"
            android:inputType="textMultiLine"
            android:paddingLeft="24dp"
            android:paddingTop="16dp"
            android:text="Spielregeln"
            android:textSize="16sp"
            android:textStyle="bold"
            tools:ignore="RtlSymmetry,HardcodedText,RtlHardcoded" />

    </FrameLayout>

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:paddingLeft="170dp"
        android:paddingTop="3dp"
        tools:ignore="RtlHardcoded,RtlSymmetry" >

        <Button
            android:id="@+id/btnZurueck"
            style="?android:attr/buttonStyleSmall"
            android:layout_width="124dp"
            android:layout_height="28dp"
            android:background="@drawable/button"
            android:nextFocusRight="@dimen/activity_horizontal_margin"
            android:text="Zurück"
            android:textSize="15dp"
            android:textStyle="bold"
            android:onClick="btnZurueck"
            tools:ignore="HardcodedText,SpUsage" />

    </FrameLayout>

</LinearLayout>